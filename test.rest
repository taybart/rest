locals {
  # url = "http://localhost:8089"
  url = "https://httpbin.org"
  name = "world"
  cookie = env("COOKIE")
  hook = <<LUA
    print("\n"..rest.req.method.." "..rest.req.url)
    if rest.req.expect then
      if rest.res.status ~= rest.req.expect then
        fail(("bad status %d != %d"):format(rest.res.status, rest.req.expect))
      end
    end
    local decoded = json.decode(rest.res.body)
    if decoded.json then
      return inspect(decoded.json)
    elseif decoded.args then
      return ("test plus 70 = %d"):format(decoded.args.test + 70)
    end
  LUA
}

// test
request "post hook get" {
  url = "${locals.url}/cookies/set"
  # headers = ["Cookie: a=1"]
  query = {
    b = "2"
    # test = 1
    # "other[friend]" = "yes"
  }
  # cookies = {
  #   a = "${locals.cookie}"
  #   env = "${env("COOKIE")}"
  # }
  body = read("./body.json")
  post_hook = <<LUA
    print('from lua below:')
    for k, v in pairs(rest.res.cookies) do
      print(k..'='..v)
    end
    --[[
    local decoded = json.decode(rest.res.body)
    -- print(inspect(decoded.args))
    print('req body', json.decode(rest.req.body))
    print(inspect(rest.req))
    print(rest.res.status, inspect(rest.res))
    -- print(rest.res.status, inspect(decoded))
    if decoded.args then
      return ("\ntest plus 70 => %d"):format(decoded.args.test + 70)
    end
  ]]--
  LUA
}

request "post hook post" {
  method = "POST"
  url = "${locals.url}/post"
  headers = [
    "X-TEST: you:ðŸ˜„",
    "Content-Type: application/json",
  ]
  body = {
    name: "test"
    hello: "${locals.name}"
    test: 17
  }
  expect = 201
  # post_hook = <<LUA
  #   local decoded = json.decode(rest.res.body)
  #   print()
  #   print(inspect(decoded.json))
  #   print('headers', inspect(rest.res.headers))
  #   local header = 'Content-Length'
  #   print(header..': '..rest.res.headers[header])
  #   -- print(msgpack.encode(decoded.json))

  # LUA
}
